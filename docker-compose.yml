version: "3.9"

services:
  # -----------------------------------
  # PX4 SITL + Ignition Gazebo simulator
  # -----------------------------------
  px4-simulator:
    build:
      context: ./docker/px4-simulator
      dockerfile: Dockerfile.simulator
    container_name: px4-simulator
    environment:
      - HEADLESS=${HEADLESS:-1}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
    ports:
      - "14556:14556/udp"
      - "11345:11345/udp"
    volumes:
      - ./logs:/work/logs
      - ./custom_model:/work/custom_model:ro
      - ./custom_airframes:/work/custom_airframes:ro

  # --------------------------
  # ROS 2  ↔︎  PX4 SITL bridge
  # --------------------------
  px4-bridge:
    build:
      context: .
      dockerfile: docker/Dockerfile.bridge
    depends_on:
      - px4-simulator
    environment:
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}

  # --------------------
  # RL エージェント環境
  # --------------------
  rl-agent:
    build:
      context: ./docker/rl-agent
      dockerfile: Dockerfile.agent
    depends_on:
      - px4-bridge
    environment:
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
    volumes:
      - ./logs:/work/logs

  # -----------------------------
  # Gazebo シミュレーション環境（Stage 2）
  # -----------------------------
  sim_ws:
    build:
      context: .
      dockerfile: docker/Dockerfile.sim
    image: drone_sim:humble
    volumes:
      - ./src:/sim_ws/src
    working_dir: /sim_ws
    tty: true
    stdin_open: true
    environment:
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
    command: /bin/bash
