name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-msgs:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Build msgs_ws
        run: docker build --target msgs_ws -f docker/Dockerfile.msgs .

  build-bridge:
    runs-on: ubuntu-22.04
    needs: build-msgs
    steps:
      - uses: actions/checkout@v4
      - name: Build bridge_ws
        run: docker build --target bridge_ws -f docker/Dockerfile.bridge .
      - name: Test bridge_ws
        run: docker run --rm $(docker build -q --target bridge_ws -f docker/Dockerfile.bridge .) colcon test || true

  build-sim:
    runs-on: ubuntu-22.04
    needs: build-bridge
    steps:
      - uses: actions/checkout@v4
      - name: Build sim_ws
        run: docker build -t drone_rl:sim -f docker/px4-simulator/Dockerfile.simulator .
      - name: Test sim_ws
        run: docker run --rm $(docker build -q --target sim_ws -f docker/Dockerfile.sim .) colcon test || true

  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Run pre-commit
        run: pre-commit run --all-files || true

  e2e:
    runs-on: ubuntu-22.04
    needs: build-sim
    steps:
      - uses: actions/checkout@v4
      - name: Launch simulation and test
        run: docker compose -f tests/ci-compose.yml up --abort-on-container-exit

  check-package-versions:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Check package.xml version consistency
        run: ./check_package_versions.sh

  rosdep-check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up ROS 2 Humble
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble
      - name: Install rosdep
        run: sudo apt-get update && sudo apt-get install -y python3-rosdep
      - name: Initialize rosdep
        run: |
          sudo rosdep init || true
          rosdep update
      - name: Add local rosdep sources
        run: |
          mkdir -p ~/.ros/rosdep/sources.list.d
          cp -r rosdep/* ~/.ros/rosdep/
      - name: Run rosdep install
        run: |
          rosdep install --from-paths src --ignore-src -r -y --rosdistro=humble

  check-tag-version:
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Extract tag version
        id: tag
        run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      - name: Extract package.xml version
        id: pkg
        run: |
          PKG_VERSION=$(grep -h '<version>' src/*/package.xml | head -1 | sed -E 's/.*<version>(.*)<\\/version>.*/\\1/')
          echo "PKG_VERSION=$PKG_VERSION" >> $GITHUB_ENV
      - name: Compare tag and package.xml version
        run: |
          if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then
            echo "Tag version ($TAG_VERSION) and package.xml version ($PKG_VERSION) do not match!"
            exit 1
          fi

  gym-api-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Set up ROS 2 Humble
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest gymnasium numpy pyyaml
          pip install -e src/ || true
      - name: Run Gym API tests
        run: |
          source /opt/ros/humble/setup.sh
          pytest tests/test_gym_api.py
        shell: bash

