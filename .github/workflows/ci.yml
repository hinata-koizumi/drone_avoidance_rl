name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-msgs:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Build msgs_ws
        run: docker build --target msgs_ws -f docker/Dockerfile.msgs .

  build-bridge:
    runs-on: ubuntu-22.04
    needs: build-msgs
    steps:
      - uses: actions/checkout@v4
      - name: Build bridge_ws
        run: docker build --target bridge_ws -f docker/Dockerfile.bridge .
      - name: Test bridge_ws
        run: docker run --rm $(docker build -q --target bridge_ws -f docker/Dockerfile.bridge .) colcon test || true

  build-sim:
    runs-on: ubuntu-22.04
    needs: build-bridge
    steps:
      - uses: actions/checkout@v4
      - name: Build sim_ws
        run: docker build -t drone_rl:sim -f docker/px4-simulator/Dockerfile.simulator .
      - name: Test sim_ws
        run: docker run --rm $(docker build -q --target sim_ws -f docker/Dockerfile.sim .) colcon test || true

  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Run pre-commit
        run: pre-commit run --all-files || true

  e2e:
    runs-on: ubuntu-22.04
    needs: build-sim
    steps:
      - uses: actions/checkout@v4
      - name: Launch simulation and test
        run: docker compose -f tests/ci-compose.yml up --abort-on-container-exit

  check-package-versions:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Check package.xml version consistency
        run: ./check_package_versions.sh

