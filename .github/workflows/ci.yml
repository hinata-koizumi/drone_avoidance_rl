name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-msgs:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Build msgs_ws
        run: docker build --target msgs_ws -f docker/Dockerfile.msgs .

  build-bridge:
    runs-on: ubuntu-22.04
    needs: build-msgs
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Build bridge_ws
        run: docker build --target bridge_ws -f docker/Dockerfile.bridge .
      - name: Test bridge_ws
        run: docker run --rm $(docker build -q --target bridge_ws -f docker/Dockerfile.bridge .) colcon test --base-paths src --packages-ignore gmock gtest

  build-sim:
    runs-on: ubuntu-22.04
    needs: build-bridge
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Build sim_ws
        run: docker build -t drone_rl:unified -f docker/Dockerfile.unified .
      - name: Test sim_ws
        run: docker run --rm drone_rl:unified ros2 launch sim_launch sim_all.launch.py

  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Run pre-commit
        run: pre-commit run --all-files || true

  e2e:
    runs-on: ubuntu-22.04
    needs: build-sim
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Build sim docker image
        run: docker build -t drone_rl:unified -f docker/Dockerfile.unified .
      - name: Launch simulation and test
        run: |
          docker compose -f tests/ci-compose.yml up --abort-on-container-exit
          docker cp $(docker ps -aqf "name=sim"):/root/.ros/rosbag2_latest ./rosbag2_latest || true
      - name: Upload rosbag2 artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rosbag2-latest
          path: ./rosbag2_latest
      - name: Print rerun command on failure
        if: failure()
        run: |
          echo "To reproduce locally:"
          echo "docker compose -f tests/ci-compose.yml up --abort-on-container-exit"

  check-package-versions:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Check package.xml version consistency
        run: ./check_package_versions.sh

  rosdep-check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Set up ROS 2 Humble
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble
      - name: Install rosdep
        run: sudo apt-get update && sudo apt-get install -y python3-rosdep
      - name: Initialize rosdep
        run: |
          sudo rosdep init || true
          rosdep update
      - name: Add local rosdep sources
        run: |
          mkdir -p ~/.ros/rosdep/sources.list.d
          cp -r rosdep/* ~/.ros/rosdep/
      - name: Run rosdep install
        run: |
          rosdep install --from-paths src --ignore-src -r -y --rosdistro=humble

  check-tag-version:
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Extract tag version
        id: tag
        run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      - name: Extract package.xml version
        id: pkg
        run: |
          PKG_VERSION=$(grep -h '<version>' src/*/package.xml | head -1 | sed -E 's/.*<version>(.*)<\\/version>.*/\\1/')
          echo "PKG_VERSION=$PKG_VERSION" >> $GITHUB_ENV
      - name: Compare tag and package.xml version
        run: |
          if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then
            echo "Tag version ($TAG_VERSION) and package.xml version ($PKG_VERSION) do not match!"
            exit 1
          fi

  gym-api-test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Set up ROS 2 Humble
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest gymnasium numpy pyyaml lark
      - name: Install ROS 2 dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-colcon-common-extensions python3-empy
          sudo rosdep init || true
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y --rosdistro=humble
      - name: Build ROS 2 workspace
        run: |
          source /opt/ros/humble/setup.sh
          export PYTHONPATH=/usr/lib/python3/dist-packages:$PYTHONPATH
          colcon build --merge-install --base-paths src
      - name: Run Gym API tests
        run: |
          source /opt/ros/humble/setup.sh
          source install/setup.sh
          export PYTHONPATH=/usr/lib/python3/dist-packages:$PYTHONPATH
          cd src && PYTHONPATH=$PYTHONPATH:$(pwd) pytest ../tests/test_gym_api.py
        shell: bash

  static-analysis:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy
      - name: Run ruff
        run: ruff check src tests
      - name: Run mypy
        run: export PYTHONPATH=install/lib/python3.10/site-packages:$PYTHONPATH && mypy src tests --exclude 'setup.py'
      - name: Set up ROS 2 Humble
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble
      - name: Install ROS 2 dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-colcon-common-extensions python3-empy
          sudo rosdep init || true
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y --rosdistro=humble
      - name: Run ament_lint_auto
        run: |
          source /opt/ros/humble/setup.sh
          colcon test --packages-select ament_lint_auto

  coverage:
    runs-on: ubuntu-22.04
    needs: build-sim
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Clean workspace
        run: tools/clean_workspace.sh
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
      - name: Run coverage
        run: |
          cd src && pytest --cov=../src --cov-report=xml:../coverage.xml
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  security-scan:
    runs-on: ubuntu-22.04
    needs: build-sim
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update && sudo apt-get install -y trivy
      - name: Scan Docker image
        run: trivy image --exit-code 0 --severity HIGH,CRITICAL drone_rl:unified

  release-notes:
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate GitHub Release Notes
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true

