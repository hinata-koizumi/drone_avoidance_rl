# PX4 SITL + ROS 2 Humble + Gazebo Garden + カスタムモデル統合Dockerfile
FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=humble
SHELL ["/bin/bash", "-lc"]

# --- base packages ---
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl wget unzip git cmake ninja-build exiftool \
    python3 python3-pip python3-jinja2 python3-numpy python3-toml python3-dev python3-empy python3-setuptools \
    libtinyxml2-dev libeigen3-dev libyaml-cpp-dev \
    libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
    libopencv-dev protobuf-compiler libprotobuf-dev \
    lsb-release sudo gnupg2 apt-transport-https ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# --- ROS 2 Humble install ---
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list && \
    apt-get update && \
    apt-get install -y ros-humble-ros-base python3-colcon-common-extensions python3-rosdep && \
    rm -rf /var/lib/apt/lists/*

# --- PX4 clone & build ---
RUN git clone --depth 1 --recursive -b v1.15.0 https://github.com/PX4/PX4-Autopilot.git /PX4-Autopilot
WORKDIR /PX4-Autopilot
ENV PX4_WITH_GZ_TRANSPORT=ON
RUN pip3 install --no-cache-dir pyulog pyros-genmsg
RUN SUDO="" NO_SUDO=1 Tools/setup/ubuntu.sh --no-nuttx && \
    make -j$(nproc) px4_sitl_default

# --- ROS 2 workspace setup ---
WORKDIR /sim_ws
COPY src/ src/
COPY rosdep/rosdep-bridge.yaml rosdep/rosdep-msgs.yaml /rosdep/
RUN useradd -m builder
RUN rm -f /etc/ros/rosdep/sources.list.d/20-default.list && \
    rosdep init || true && \
    mkdir -p /etc/ros/rosdep/sources.list.d && \
    echo "yaml file:///rosdep/rosdep-bridge.yaml trusted: true" > /etc/ros/rosdep/sources.list.d/10-local.yaml && \
    mkdir -p /root/.ros && \
    chown -R builder:builder /etc/ros /root/.ros /rosdep
USER builder
RUN rosdep update --include-eol-distros && \
    rosdep install --from-paths /sim_ws/src --ignore-src --rosdistro ${ROS_DISTRO} -y --include-eol-distros || true
USER root
RUN rm -rf build/ install/ log/
RUN . /opt/ros/${ROS_DISTRO}/setup.sh && \
    colcon build --base-paths src --symlink-install --event-handlers console_direct+ --packages-select px4_msgs drone_msgs state_bridge command_bridge angle_bridge outer_motor_bridge

# --- Gazebo Garden, netcat, PX4バイナリのPATH ---
RUN apt-get update && \
    apt-get install -y netcat wget lsb-release mongodb-org-tools && \
    wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/gazebo-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/gazebo-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" > /etc/apt/sources.list.d/gazebo-stable.list && \
    apt-get update && \
    apt-get install -y gz-garden && \
    ln -sf /PX4-Autopilot/build/px4_sitl_default/bin/px4 /usr/local/bin/px4 && \
    ln -sf /PX4-Autopilot/build/px4_sitl_default/bin/param /usr/local/bin/param || true && \
    ln -sf /usr/bin/nc /PX4-Autopilot/build/px4_sitl_default/bin/nc || true && \
    ln -sf /usr/bin/bsondump /PX4-Autopilot/build/px4_sitl_default/bin/bsondump || true

# --- カスタムモデル配置 ---
COPY custom_model/drone_model /models/drone_model
RUN mkdir -p /usr/share/gz/garden/models && \
    ln -s /models/drone_model /usr/share/gz/garden/models/drone_model

# --- Entrypoint ---
COPY docker/entrypoint-unified.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENV ROS_DOMAIN_ID=0
ENV PYTHONPATH=/sim_ws/install/lib/python3.10/site-packages:$PYTHONPATH
ENTRYPOINT ["/entrypoint.sh"] 