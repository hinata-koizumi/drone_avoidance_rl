# syntax=docker/dockerfile:1.4
ARG GITHUB_REPOSITORY_OWNER=hinata-koizumi
ARG BASE_IMAGE=ghcr.io/${GITHUB_REPOSITORY_OWNER}/drone-avoidance-base-gpu:2.0.1
ARG BUILDKIT_INLINE_CACHE=1

FROM ${BASE_IMAGE}

WORKDIR /drone_ws

# GPU対応Python依存パッケージのインストール
COPY requirements-gpu.txt requirements-gpu.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir -r requirements-gpu.txt

# CUDA環境変数の設定
ENV CUDA_VISIBLE_DEVICES=0
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# RL関連のソースコードをコピー
COPY src/drone_sim_env.py src/drone_sim_env.py
COPY src/vector_env_example.py src/vector_env_example.py
COPY src/gym_env.py src/gym_env.py
COPY tests/ tests/
COPY src/sample_agent/ src/sample_agent/

# 分散学習用の設定ファイル
COPY config/rl_config.yaml config/rl_config.yaml
COPY config/ray_config.yaml config/ray_config.yaml

# GPU監視ツール
COPY tools/gpu_monitor.py tools/gpu_monitor.py
COPY tools/profiling/ tools/profiling/

# Entrypoint
COPY docker/rl-agent/entrypoint-rl-agent-gpu.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# 環境変数の設定
ENV PYTHONPATH=/drone_ws/src:${PYTHONPATH:-}
ENV ROS_DOMAIN_ID=0
ENV RAY_DISABLE_IMPORT_WARNING=1

# ポート設定（Ray用）
EXPOSE 6379 8265 10001

ENTRYPOINT ["/entrypoint.sh"] 