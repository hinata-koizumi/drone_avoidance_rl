FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ARG ROS_DISTRO=humble
ARG IGNITION_VERSION=garden
ENV ROS_DISTRO=${ROS_DISTRO}
ENV IGNITION_VERSION=${IGNITION_VERSION}
SHELL ["/bin/bash", "-lc"]

# --- base packages ---
RUN function robust_apt_install() { \
      for i in {1..5}; do \
        apt-get update --fix-missing && \
        apt-get install -y --no-install-recommends "$@" && break || sleep 10; \
      done; \
    }; \
    robust_apt_install curl wget unzip git cmake ninja-build exiftool \
      python3 python3-pip python3-jinja2 python3-numpy python3-toml python3-dev python3-empy python3-setuptools \
      libtinyxml2-dev libeigen3-dev libyaml-cpp-dev \
      libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
      libopencv-dev protobuf-compiler libprotobuf-dev \
      lsb-release sudo gnupg2 apt-transport-https ca-certificates netcat && \
    rm -rf /var/lib/apt/lists/*

# --- ROS 2 Humble install ---
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl gnupg2 lsb-release && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | gpg --dearmor -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list && \
    apt-get update && \
    apt-get install -y ros-${ROS_DISTRO}-ros-base python3-colcon-common-extensions python3-rosdep && \
    rm -rf /var/lib/apt/lists/*

# --- PX4 clone & build ---
RUN git clone --depth 1 --recursive -b main https://github.com/PX4/PX4-Autopilot.git /PX4-Autopilot
WORKDIR /PX4-Autopilot
ENV PX4_WITH_GZ_TRANSPORT=ON
RUN pip3 install --no-cache-dir --index-url https://pypi.org/simple pyulog pyros-genmsg
RUN SUDO="" NO_SUDO=1 Tools/setup/ubuntu.sh --no-nuttx && \
    make -j$(nproc) px4_sitl_default && \
    cp /PX4-Autopilot/build/px4_sitl_default/bin/px4 /usr/local/bin/px4 && \
    chmod +x /usr/local/bin/px4

# --- Gazebo Garden install ---
RUN for i in {1..5}; do apt-get update && apt-get install -y lsb-release wget gnupg2 && break || sleep 10; done
RUN wget https://packages.osrfoundation.org/gazebo.gpg -O /usr/share/keyrings/pkgs-osrf-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/pkgs-osrf-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" > /etc/apt/sources.list.d/gazebo-stable.list
RUN for i in {1..5}; do apt-get update && robust_apt_install --no-install-recommends \
      gz-${IGNITION_VERSION} libgz-sim8 libgz-sim8-plugins libogre-next-2.3.0 && break || sleep 10; done && \
    rm -rf /var/lib/apt/lists/*
# 必要に応じてros-gz-bridge等も
RUN for i in {1..5}; do apt-get update && robust_apt_install --no-install-recommends ros-${ROS_DISTRO}-ros-gz-bridge ros-${ROS_DISTRO}-ros-gz-sim && break || sleep 10; done && \
    rm -rf /var/lib/apt/lists/*

# --- Entrypoint placeholder ---
RUN useradd -m builder
USER builder
WORKDIR /workspace

# --- Arch check ---
USER root
RUN if [ "$(dpkg --print-architecture)" != "amd64" ]; then \
  echo "[ERROR] This image is officially supported only on amd64. For arm64 or other architectures, additional validation and support are required. Exiting."; \
  exit 1; \
fi \
&& if ! command -v ign >/dev/null 2>&1 && command -v gz >/dev/null 2>&1; then \
  ln -s $(command -v gz) /usr/local/bin/ign; \
  echo '[INFO] Created symlink: ign -> gz'; \
fi 