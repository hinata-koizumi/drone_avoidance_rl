# docker/px4-bridge/Dockerfile.bridge  ★R6 – fix colcon + toolchain

############################
# Stage 0 – build workspace
############################
FROM ubuntu:22.04 AS builder
ENV DEBIAN_FRONTEND=noninteractive

# ── add ROS 2 apt repo & install bridge + colcon ──
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates curl gnupg lsb-release && \
    mkdir -p /usr/share/keyrings && \
    curl -fsSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | \
        gpg --dearmor -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" \
        > /etc/apt/sources.list.d/ros2.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        ros-humble-ros-gz-bridge \
        ros-humble-rosidl-default-generators \
        python3-colcon-common-extensions \
        build-essential && \
    rm -rf /var/lib/apt/lists/*

# ── colcon workspace ──
WORKDIR /bridge_ws
COPY src/ src/                   
COPY drone_msgs/ src/drone_msgs/  

RUN . /opt/ros/humble/setup.sh && \
    colcon build --packages-select \
        state_bridge command_bridge angle_bridge outer_motor_bridge drone_msgs

############################
# Stage 1 – runtime image
############################
FROM ubuntu:22.04 AS runtime
ENV DEBIAN_FRONTEND=noninteractive

# runtime‑only ROS 2 bridge
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates curl gnupg lsb-release && \
    mkdir -p /usr/share/keyrings && \
    curl -fsSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | \
        gpg --dearmor -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" \
        > /etc/apt/sources.list.d/ros2.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        ros-humble-ros-gz-bridge \
        ros-humble-rosidl-default-runtime && \
    rm -rf /var/lib/apt/lists/*

# ── copy artefacts & entrypoint ──
COPY --from=builder /bridge_ws/install /bridge_ws/install
COPY docker/px4-bridge/entrypoint-bridge.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENV ROS_DOMAIN_ID=0
ENTRYPOINT ["/entrypoint.sh"]
