ARG GITHUB_REPOSITORY_OWNER=hinata-koizumi
ARG BASE_IMAGE=ghcr.io/${GITHUB_REPOSITORY_OWNER}/drone-avoidance-base:2.0.1

# ビルドステージ
FROM ${BASE_IMAGE} AS builder

USER root
WORKDIR /msgs_ws
COPY rosdep/rosdep-msgs.yaml rosdep/rosdep-msgs.yaml
COPY src/drone_msgs src/drone_msgs

RUN mkdir -p /etc/ros/rosdep/sources.list.d && \
    echo "yaml file:///msgs_ws/rosdep/rosdep-msgs.yaml" > /etc/ros/rosdep/sources.list.d/10-local.yaml && \
    rosdep update && \
    rosdep install --from-paths src --rosdistro ${ROS_DISTRO} -y --ignore-src && \
    . /opt/ros/${ROS_DISTRO}/setup.sh && \
    colcon build --symlink-install --merge-install --packages-select drone_msgs && \
    rm -rf build/ log/ /tmp/* /var/tmp/* /root/.cache/* /usr/share/doc/* /usr/share/man/* /var/lib/apt/lists/* && \
    apt-get clean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*

# ランタイムステージ
FROM ${BASE_IMAGE} AS msgs_ws

USER root
WORKDIR /msgs_ws

# ビルドステージからインストール済みファイルをコピー
COPY --from=builder /msgs_ws/install /msgs_ws/install
COPY --from=builder /etc/ros/rosdep/sources.list.d/10-local.yaml /etc/ros/rosdep/sources.list.d/10-local.yaml

ENV OVERLAY_WS=/msgs_ws/install

RUN if [ "$(dpkg --print-architecture)" != "amd64" ]; then \
  echo "[WARN] This image is officially supported only on amd64. For arm64 or other architectures, additional validation and support are required."; \
fi

RUN rm -rf /tmp/* /var/tmp/* /root/.cache/* /usr/share/doc/* /usr/share/man/* /var/lib/apt/lists/* || true