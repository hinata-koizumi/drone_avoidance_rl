# docker/px4-simulator/Dockerfile.simulator
#   * builds PX4‑SITL + Ignition Gazebo motor plugin (libgz_motor_model.so)
#   * headless, non‑interactive ‑ designed for CI (GitHub Actions)

#########################
# Stage 0 – PX4 build   #
#########################
FROM ubuntu:22.04 AS builder
ARG PX4_BRANCH=v1.15.0

# ─────── base packages ───────
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    wget git cmake ninja-build exiftool \
    python3 python3-pip python3-jinja2 python3-numpy python3-toml python3-dev python3-empy python3-setuptools \
    libtinyxml2-dev libeigen3-dev libyaml-cpp-dev \
    libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
    libopencv-dev protobuf-compiler libprotobuf-dev \
    lsb-release \
 && rm -rf /var/lib/apt/lists/*

RUN pip3 install --no-cache-dir pyulog

# ─────── PX4 clone & build ───────
RUN git clone --depth 1 --recursive -b ${PX4_BRANCH} \
      https://github.com/PX4/PX4-Autopilot.git /PX4-Autopilot
WORKDIR /PX4-Autopilot
ENV PX4_WITH_GZ_TRANSPORT=ON
RUN pip3 install --no-cache-dir pyros-genmsg

# PX4 setup ‑‑ remove sudo completely (root image)
RUN SUDO="" NO_SUDO=1 Tools/setup/ubuntu.sh --no-nuttx && \
    make -j$(nproc) px4_sitl_default

# ─────── Ignition motor plugin ───────
RUN git config --global credential.helper "" && \
    git clone --depth 1 https://github.com/PX4/PX4-SITL_gz.git /px4-gz
WORKDIR /px4-gz
RUN cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr && \
    cmake --build build -j$(nproc) && \
    cmake --install build
# → installs /usr/lib/libgz_motor_model.so

##############################
# Stage 1 – runtime image    #
##############################
FROM ubuntu:22.04 AS runtime
LABEL org.opencontainers.image.title="PX4‑SITL Runtime"

# PX4 runtime deps (none; keep slim) & copy artefacts
COPY --from=builder /PX4-Autopilot/build/px4_sitl_default /PX4-Autopilot/build/px4_sitl_default
COPY --from=builder /PX4-Autopilot/Tools                 /PX4-Autopilot/Tools
COPY --from=builder /PX4-Autopilot/ROMFS                 /PX4-Autopilot/ROMFS
COPY --from=builder /airframes                           /airframes
COPY --from=builder /usr/lib/libgz_motor_model.so        /usr/lib/

ENV LD_LIBRARY_PATH="/usr/lib:${LD_LIBRARY_PATH}"

COPY entrypoint-simulator.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

WORKDIR /PX4-Autopilot
ENTRYPOINT ["/entrypoint.sh"]
