# docker/px4-simulator/Dockerfile.simulator
#   * builds PX4‑SITL (Ignition Gazebo motor plugin is now built **inside PX4**)
#   * headless / CI‑friendly (GitHub Actions & local Docker)

FROM ubuntu:22.04

# --- base packages ---
ENV DEBIAN_FRONTEND=noninteractive
RUN set -e; \
    for i in 1 2 3 4 5; do \
      apt-get update && \
      apt-get install -y --no-install-recommends \
        curl wget unzip \
        git cmake ninja-build exiftool \
        python3 python3-pip python3-jinja2 python3-numpy python3-toml python3-dev python3-empy python3-setuptools \
        libtinyxml2-dev libeigen3-dev libyaml-cpp-dev \
        libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
        libopencv-dev protobuf-compiler libprotobuf-dev \
        lsb-release sudo gnupg2 && \
      rm -rf /var/lib/apt/lists/* && break || sleep 10; \
    done

# --- ROS 2 Humble install ---
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list && \
    apt-get update && \
    apt-get install -y ros-humble-ros-base python3-colcon-common-extensions && \
    rm -rf /var/lib/apt/lists/*

# --- PX4 clone & build ---
RUN git clone --depth 1 --recursive -b v1.15.0 https://github.com/PX4/PX4-Autopilot.git /PX4-Autopilot
WORKDIR /PX4-Autopilot
ENV PX4_WITH_GZ_TRANSPORT=ON
RUN pip3 install --no-cache-dir pyulog pyros-genmsg
RUN SUDO="" NO_SUDO=1 Tools/setup/ubuntu.sh --no-nuttx && \
    make -j$(nproc) px4_sitl_default

RUN if [ ! -f /PX4-Autopilot/build/px4_sitl_default/etc/init.d-posix/px4-alias.sh ]; then \
      echo '#!/bin/sh' > /PX4-Autopilot/build/px4_sitl_default/etc/init.d-posix/px4-alias.sh; \
      chmod +x /PX4-Autopilot/build/px4_sitl_default/etc/init.d-posix/px4-alias.sh; \
    fi

RUN mkdir -p /usr/share/gz/garden/models && \
    ln -s /models/drone_model /usr/share/gz/garden/models/drone_model

RUN sed -i 's|source |. |g' /PX4-Autopilot/build/px4_sitl_default/etc/init.d-posix/rcS

ENV GZ_RESOURCE_PATH="/models:/usr/share/gz/garden/models"

# --- Gazebo Garden, netcat, PX4バイナリのPATH ---
RUN apt-get update && \
    apt-get install -y netcat-openbsd wget lsb-release && \
    wget https://packages.osrfoundation.org/gazebo.key -O /usr/share/keyrings/gazebo-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/gazebo-archive-keyring.gpg] http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -cs) main" > /etc/apt/sources.list.d/gazebo-stable.list && \
    apt-get update && \
    apt-get install -y gz-garden && \
    ln -s /PX4-Autopilot/build/px4_sitl_default/bin/px4 /usr/local/bin/px4

COPY docker/px4-simulator/entrypoint-simulator.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

COPY custom_model/drone_model /models/drone_model

ENTRYPOINT ["/entrypoint.sh"]
