ARG GITHUB_REPOSITORY_OWNER=hinata-koizumi
ARG BASE_IMAGE=ghcr.io/${GITHUB_REPOSITORY_OWNER}/drone-avoidance-base:2.0.1

# Build stage for ROS 2 workspace
FROM ${BASE_IMAGE} as builder

WORKDIR /sim_ws

# Copy package sources
COPY src/sim_launch src/sim_launch
# Copy shared simulation config referenced by setup.py (../../config/...)
COPY config/ config/

# Install dependencies and build workspace
RUN mkdir -p /etc/ros/rosdep/sources.list.d && \
    rosdep update && \
    rosdep install --from-paths src --rosdistro humble -y --ignore-src && \
    . /opt/ros/humble/setup.sh && \
    colcon build --merge-install --symlink-install --packages-select sim_launch --parallel-workers $(nproc) && \
    # Cleanup caches (keep build directory for symlink integrity)
    rm -rf log/ /tmp/* /var/tmp/* /root/.cache/* && \
    find /usr -name "*.pyc" -delete && \
    find /usr -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

# Runtime stage
FROM ${BASE_IMAGE} as runtime

WORKDIR /PX4-Autopilot

COPY docker/px4-simulator/entrypoint-px4-sitl.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Copy built ROS 2 workspace from builder stage
COPY --from=builder /sim_ws /sim_ws

# Ensure packages installed in /sim_ws are discoverable at runtime
ENV AMENT_PREFIX_PATH=/sim_ws/install:$AMENT_PREFIX_PATH
ENV ROS_PACKAGE_PATH=/sim_ws/install/share:$ROS_PACKAGE_PATH

RUN id px4user || (echo "px4user does not exist in base image!" && exit 1)
USER px4user

# PX4バイナリはベースイメージから利用
# 必要に応じてPX4-Autopilotの設定や起動スクリプトのみ追加

ENTRYPOINT ["/entrypoint.sh"] 