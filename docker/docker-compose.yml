version: "3.9"

x-common-env: &common-env
  ROS_DOMAIN_ID: "0"

services:
  px4-simulator:
    build:
      context: ..
      dockerfile: docker/px4-simulator/Dockerfile.simulator
    container_name: px4-simulator
    environment:
      <<: *common-env
      HEADLESS: "${HEADLESS-1}"
      SYS_AUTOSTART: "${SYS_AUTOSTART-4500}"
      MODEL_PATH: "${MODEL_PATH-/models/drone_model}"
    volumes:
      - ../custom_model:/models:ro
      - ../custom_airframes:/airframes:ro
      - ../logs:/work/logs
    ports:
      - "14556:14556/udp"
      - "11345:11345/udp"
    healthcheck:
      test: ["CMD-SHELL", "pgrep -x px4 > /dev/null"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  px4-bridge:
    build:
      context: ..
      dockerfile: docker/px4-bridge/Dockerfile.bridge
    container_name: px4-bridge
    environment: *common-env
    depends_on:
      px4-simulator:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "ros2 topic echo -n1 /drone/state > /dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ../logs:/work/logs
    restart: on-failure

  rl-agent:
    build:
      context: ..
      dockerfile: docker/rl-agent/Dockerfile.agent
    container_name: rl-agent
    environment:
      <<: *common-env
      TENSORBOARD_DIR: "/work/logs/tb"
    depends_on:
      px4-bridge:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f train_agent.py > /dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ../logs:/work/logs
    restart: unless-stopped

profiles:
  gpu:
    services:
      rl-agent:
        deploy:
          resources:
            reservations:
              devices:
                - capabilities: [gpu]
