# Stage 2: sim_ws – Gazeboシミュレーション用
FROM ros:humble AS sim_ws

ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=humble
SHELL ["/bin/bash", "-lc"]

WORKDIR /sim_ws

# Install base dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    apt-transport-https \
    ca-certificates \
    gnupg2 \
    curl \
    lsb-release \
    wget

# Add OSRF Gazebo (Ignition/Garden) repository
RUN wget https://packages.osrfoundation.org/gazebo.key -O - | apt-key add - && \
    echo "deb http://packages.osrfoundation.org/gazebo/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/gazebo-latest.list && \
    apt-get update

# Install ROS/Gazebo and other dependencies
RUN apt-get install -y --no-install-recommends \
    python3-pip \
    git \
    python3-colcon-common-extensions \
    python3-rosdep \
    ros-humble-ros-gz-sim \
    ros-humble-ros-gz-bridge \
    ros-humble-ros-gz-image \
    ros-humble-xacro \
    ros-humble-rviz2 \
    python3-pytest \
    python3-ament-package && \
    rm -rf /var/lib/apt/lists/*

# Copy rosdep definitions to proper location
COPY rosdep/rosdep-bridge.yaml rosdep/rosdep-msgs.yaml /rosdep/

# Create a non-root user for rosdep update
RUN useradd -m builder

# Initialize and configure rosdep as root, but update as non-root
RUN rm -f /etc/ros/rosdep/sources.list.d/20-default.list && \
    rosdep init || true && \
    mkdir -p /etc/ros/rosdep/sources.list.d && \
    echo "yaml file:///rosdep/rosdep-bridge.yaml trusted: true" > /etc/ros/rosdep/sources.list.d/10-local.yaml && \
    cat /etc/ros/rosdep/sources.list.d/10-local.yaml && \
    chown -R builder:builder /etc/ros /root/.ros /rosdep

USER builder
USER root

RUN cd /sim_ws && \
    git clone --branch main --depth 1 https://github.com/PX4/px4_msgs.git src/px4_msgs

# Copy all source packages
COPY src/ src/

USER builder
RUN rosdep update --include-eol-distros && \
    rosdep install --from-paths /sim_ws/src --ignore-src --skip-keys ament_python,px4_msgs --rosdistro ${ROS_DISTRO} -y --include-eol-distros || true
USER root

# Install dependencies
RUN . /opt/ros/${ROS_DISTRO}/setup.sh && \
    rosdep update && \
    rosdep db && \
    rosdep install --from-paths src --ignore-src --skip-keys px4_msgs --rosdistro ${ROS_DISTRO} -y --include-eol-distros || true

# Build the workspace
RUN . /opt/ros/${ROS_DISTRO}/setup.sh && \
    colcon build --symlink-install

# Export workspace path
ENV OVERLAY_WS=/sim_ws/install

# Default entrypoint
COPY docker/entrypoint-sim.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENV ROS_DOMAIN_ID=0
ENTRYPOINT ["/entrypoint.sh"]